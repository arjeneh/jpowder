import java.awt.Component;
import java.awt.Container;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

/*
 * QnairePanel.java
 *
 * Created on 01 May 2007, 16:25
 *
 * This class is called from LogPanel.java for Usability Questions.
 *
 * It calls a txt file which has n questions
 * then build the n question (QuestionSetPanel).java to build30 GUI.
 *
 */

/**
 *
 * @author  Kreecha Puphaiboon
 */
public class QnairePanel extends javax.swing.JPanel {
    
    private java.util.ArrayList<String> questions = null;
    private volatile static java.util.Vector answers = new java.util.Vector();
    private static int questionSize;
    
    /** Creates new form QnairePanel */
    public QnairePanel() {
        questions = getQuestionsFromFile();
        questionSize = questions.size();
        
        initComponents();
        
        for(int x = 0; x < questions.size(); x++){
            containerPanel.add(new QuestionSetPanel(questions.get(x)));
        }//for
    }//QnairePanel
    
    public ArrayList<String> getQuestionsFromFile(){
        ArrayList<String> dummy = new ArrayList<String>();
        try {
            InputStream stream = getClass().getResourceAsStream("data/qnaire.txt");
            InputStreamReader in = new InputStreamReader(stream);
            BufferedReader readIn = new BufferedReader(in);
            String word;
            // reading text
            while ((word = readIn.readLine()) != null) {
                dummy.add(word);
            }
            readIn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return dummy;
    }//getQuestionsFromFile
    
//recursively collect the radio button selected.
    public static void getSelectedRadio(final Container ref) {
        Component[] nComponents = ref.getComponents();
        for (int i = 0; i < nComponents.length; i++) {
            if(nComponents[i] instanceof Container) {
                if(nComponents[i] instanceof JPanel) {
                    JPanel jPanel = (JPanel) nComponents[i];
                    Component[] panelComponents = jPanel.getComponents();// get components in the panel.
                    for (int j = 0; j < panelComponents.length; j++) {
                        if(panelComponents[j] instanceof JRadioButton) {
                            
                            JRadioButton jrb = (JRadioButton)panelComponents[j];
                            if(jrb.isSelected()){
                                if (answers.size() >= questionSize){
                                    answers.removeAllElements();
                                }
                                answers.add(jrb.getActionCommand());
                            }
                        } //end if JRadioButton
                    }//end for
                    getSelectedRadio((Container)nComponents[i]); //move recursively through the Components and Sub-Containers
                }//if panel
            }//if
        }//for
    }//end getSelectedRadio
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        butPanel = new javax.swing.JPanel();
        submit_btn = new javax.swing.JButton();
        question_sp = new javax.swing.JScrollPane();
        containerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(800, 240));
        setPreferredSize(new java.awt.Dimension(800, 240));
        setLayout(new java.awt.GridBagLayout());

        submit_btn.setText("Submit");
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });
        butPanel.add(submit_btn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(butPanel, gridBagConstraints);

        question_sp.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        question_sp.setMinimumSize(new java.awt.Dimension(800, 200));
        question_sp.setPreferredSize(new java.awt.Dimension(802, 200));

        containerPanel.setMinimumSize(new java.awt.Dimension(800, 3500));
        containerPanel.setPreferredSize(new java.awt.Dimension(800, 3500));
        containerPanel.setLayout(new javax.swing.BoxLayout(containerPanel, javax.swing.BoxLayout.Y_AXIS));
        question_sp.setViewportView(containerPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(question_sp, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("      Please fill in this questionaire this will help us improve the usability of our software. Thank you.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    //cancel submission.    //get what user selected, if not being canceled.
    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
        getSelectedRadio(containerPanel);
        
        try {
            java.io.File file = new java.io.File("output.txt");
            
            // Create file if it does not exist
            boolean success = file.createNewFile();
            
            if (success) {
                ReadWriteFileUtil.setContents(file, makeStringPattern(answers.toString() ) );
                // File did not exist and was created
            } else {
                // File already exists
                ReadWriteFileUtil.setContents(file, makeStringPattern(answers.toString() ) );
            }
        } catch (IOException e) {
        }
    }//GEN-LAST:event_submit_btnActionPerformed
    
    public String makeStringPattern(String str){
        String tmp = str.replaceAll(", " , "");
        String noOpen = removeChar(tmp,'[');
        String noEnd = removeChar(noOpen,']');
        
        String string = spacer(noEnd, 5);
        
        return string;
    }//makeStringPattern
    
    //add a space as a seperator
    public String spacer(String str, int atPos){
        String out = "";
        int stopper = 5;
        
        if(str != null){ 
            for(int i = 0; i < str.length(); i++){
                int r = i % atPos; // r = 4
                if ((r == 0) && (i !=0)){
                    out = out + " ";
                    out = out + str.charAt(i); 
                } else{
                    out = out + str.charAt(i); 
                }
                                     
            }
        }
        return out;
    }//spacer    
    
    public String removeChar(String s, char c) {
        String r = "";
        for (int i = 0; i < s.length(); i ++) {
            if (s.charAt(i) != c)
                r += s.charAt(i);
        }
        return r;
    }//removeChar
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel butPanel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane question_sp;
    private javax.swing.JButton submit_btn;
    // End of variables declaration//GEN-END:variables
    
}

