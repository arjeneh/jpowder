/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChangePlotStyle.java
 *
 * Created on 10-Dec-2009, 14:13:58
 */
package org.jpowder.chartTools;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.border.LineBorder;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.util.ShapeUtilities;
import org.jpowder.InfoPanel;
import org.jpowder.JPowder;
import org.jpowder.JpowderInternalframe;
import org.jpowder.dataset.DataSetWithErrors;
import org.jpowder.jfreechart.FilesPlotter;

/**
 *
 * @author qyt21516
 */
public class ChangePlotStyle extends javax.swing.JPanel implements InfoPanel {

    /**/
    private ChartToolsIcon chartToolsIcon;
    /*Array of string which contains the all the file names that have been plotted. */
    private String[] string;

    /**
     *
     * @param chartToolsIcon
     */
    public ChangePlotStyle(ChartToolsIcon chartToolsIcon) {
        initComponents();
        this.chartToolsIcon = chartToolsIcon;

    }

    /**
     *
     * @return changePlotStyleLabel.
     */
    public JLabel getChangePlotStyleLabel() {
        return changePlotStyleLabel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        conectingLines = new javax.swing.JCheckBox();
        errorBars = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Back = new javax.swing.JButton();
        changePlotStyleLabel = new javax.swing.JLabel();
        dataSetComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        shapes = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        markerSizeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        apply = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        conectingLines.setSelected(true);
        conectingLines.setText("Turn on the connecting lines");
        conectingLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectingLinesActionPerformed(evt);
            }
        });

        errorBars.setSelected(true);
        errorBars.setText("Turn on the error bars");
        errorBars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorBarsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Change The Plot Style");

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)));

        jTextArea1.setBackground(new java.awt.Color(236, 233, 216));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Click on the Check Box to change the plotted data in the frame \nwhich is in focus.This is also \navaliable when you right click \non the frame.   ");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(236, 233, 216), 1, true));
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        dataSetComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL" }));
        dataSetComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataSetComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("DataSet:");

        shapes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Square", "Circle", "Oval", "Diamond", "DownTriangle", "UpTriangle", "Rectangle", " " }));

        jLabel4.setText("Shapes:");

        markerSizeField.setText("3");

        jLabel5.setText("Size:");

        apply.setText("Apply");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apply)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(shapes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(markerSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dataSetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(conectingLines)
                            .addComponent(errorBars)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(changePlotStyleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(Back)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changePlotStyleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dataSetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shapes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(markerSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(apply)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conectingLines)
                .addGap(3, 3, 3)
                .addComponent(errorBars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * this is an update method which updates this info Panel.
     */
    public void update() {
        dataSetComboBox.setModel(new javax.swing.DefaultComboBoxModel(addDataSet()));
        JpowderInternalframe inFocus = JPowder.internalFrameInFocus;
        XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer();

        if (inFocus.getPowderDataSet().get(0) instanceof DataSetWithErrors) {
            XYErrorRenderer renderer1 = (XYErrorRenderer) inFocus.getXYPlot().getRenderer();
            errorBars.setSelected(renderer1.getDrawYError());
        }
        conectingLines.setSelected(renderer.getBaseLinesVisible());
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            errorBars.setSelected(false);
            conectingLines.setSelected(false);

        }

    }

    /**
     * this method get all the plotted files name and add them to the comboBox  and
     * also, render to the comboBox so each indivdual file names has the series color
     * wich was plotted in.
     *
     * @return array of strings which contains all the files which has been plotted.
     */
    public String[] addDataSet() {
        JpowderInternalframe inFocus = JPowder.internalFrameInFocus;
        int size = inFocus.getXYPlot().getDatasetCount() + 1;
        string = new String[size];
        string[0] = "ALL";
        for (int i = 1; i < size; i++) {

            string[i] = inFocus.getPowderDataSet().elementAt(i - 1).getFileName();
            dataSetComboBox.setRenderer(new ListCellRenderer() {

                public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {


                    JLabel j = new JLabel(value.toString());

                    if (index >= 1) {

                        j.setForeground((Color) FilesPlotter.allseriescolors[index - 1]);
                        j.setBackground((Color) FilesPlotter.allseriescolors[index]);
                    }

                    if (cellHasFocus) {
                        System.out.println("cellhasfocus");
                        j.setBackground(Color.BLUE);

                    }

                    if (isSelected) {
                        j.setBorder(LineBorder.createBlackLineBorder());
                        j.setBackground(Color.BLUE);
                    }


                    return j;


                }
            });
        }
        return string;
    }

    /**
     * this methods turns the the connecting lines in the plotted data on and off.
     * @param evt
     */
    private void conectingLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectingLinesActionPerformed
        JpowderInternalframe inFocus = JPowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {
            XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
            boolean status = renderer.getBaseLinesVisible();
            renderer.setBaseLinesVisible(!status);
        }
    }//GEN-LAST:event_conectingLinesActionPerformed
    /**
     * this method turns the error bars int he cif and xye data on and off.
     * @param evt
     */
    private void errorBarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorBarsActionPerformed
        JpowderInternalframe inFocus = JPowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {

            if (inFocus.getPowderDataSet().get(i) instanceof DataSetWithErrors) {
                XYErrorRenderer renderer = (XYErrorRenderer) inFocus.getXYPlot().getRenderer(i);
                boolean status = renderer.getDrawYError();
                renderer.setDrawYError(!status);//show opposite Y error bar.
                renderer.setErrorStroke(new BasicStroke(1f));
            }
        }
    }//GEN-LAST:event_errorBarsActionPerformed
    /**
     * return to the chartToolsPanel.
     * @param evt
     */
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed

        chartToolsIcon.setComponentZOrder(this, 1);
        chartToolsIcon.add(this);
        chartToolsIcon.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_BackActionPerformed

    private void dataSetComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataSetComboBoxActionPerformed
}//GEN-LAST:event_dataSetComboBoxActionPerformed
    /**
     * this method responsible for gettign action of the comboBoxes and textFied and
     * and appling to the plotted data in the internalframe whcih is in focus.
     * @param evt
     */
    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        JpowderInternalframe inFocus = JPowder.internalFrameInFocus;
        if (dataSetComboBox.getSelectedItem().toString().equals("ALL") && shapes.getSelectedItem().toString().equals("None")) {
            for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {
                XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
                renderer.setBaseShapesVisible(false);

            }
        }

        int seriescount = inFocus.getXYPlot().getDatasetCount();
        for (int i = 0; i < seriescount; i++) {
            if (inFocus.getPowderDataSet().elementAt(i).getFileName().equals(
                    dataSetComboBox.getSelectedItem())) {
                XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
                renderer.setBaseShapesVisible(true);
                double dble = Double.parseDouble(markerSizeField.getText());
                float flot = Float.valueOf(markerSizeField.getText());

                if (shapes.getSelectedItem().toString().equals("None")) {
                    renderer.setBaseShapesVisible(false);
                }

                if (shapes.getSelectedItem().toString().equals("Square")) {
                    renderer.setSeriesShape(0, new Rectangle2D.Double(-dble / 2, -dble / 2, dble, dble));
                }
                if (shapes.getSelectedItem().toString().equals("Circle")) {
                    renderer.setSeriesShape(0, new Ellipse2D.Double(-dble / 2, -dble / 2, dble, dble));
                }
                if (shapes.getSelectedItem().toString().equals("Oval")) {
                    renderer.setSeriesShape(0, new Ellipse2D.Double(-dble / 2, -dble / 2, dble, dble / 2));
                }
                if (shapes.getSelectedItem().toString().equals("Diamond")) {
                    renderer.setSeriesShape(0, ShapeUtilities.createDiamond(flot));
                }
                if (shapes.getSelectedItem().toString().equals("DownTriangle")) {
                    renderer.setSeriesShape(0, ShapeUtilities.createDownTriangle(flot));
                }
                if (shapes.getSelectedItem().toString().equals("UpTriangle")) {
                    renderer.setSeriesShape(0, ShapeUtilities.createUpTriangle(flot));
                }
                if (shapes.getSelectedItem().toString().equals("Rectangle")) {
                    renderer.setSeriesShape(0, new Rectangle2D.Double(-dble / 2, -dble / 2, dble, dble / 2));
                }
            }
        }
}//GEN-LAST:event_applyActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton apply;
    private javax.swing.JLabel changePlotStyleLabel;
    private javax.swing.JCheckBox conectingLines;
    private javax.swing.JComboBox dataSetComboBox;
    private javax.swing.JCheckBox errorBars;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField markerSizeField;
    private javax.swing.JComboBox shapes;
    // End of variables declaration//GEN-END:variables
}
