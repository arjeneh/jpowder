#summary One-sentence summary of this page.
#labels Featured

=Jpowder: a Java-based program for the display and examination of powder diffraction data.=

*Anders J.Markvardsen,^a*^ Kreecha Puphaiboon,^b^ Mohammad Arjeneh,^a,c^ Kenneth Shankland,^d^ Hannah L. Guest,^a^ Thomas A. Griffin,^a^ Daniel R. Badham^a^ and Damian W. Flannery^a^.*

^a^STFC Rutherford Appleton Laboratory, Didcot, Oxforshire OX11 0QX, UK, ^b^Kasem Bundit University, Bangkok, Thailand, ^c^City Univercity of London, Northampton Square, London EC1V 0HB, and ^d^University of Reading, Whiteknights, PO Box 217, Reading, Berkshire RG6 6AH, UK. Correspondence e-mail: anders.markvardsen@stfc.ac.uk

The ability to display and inspect powder diffraction data quickly and efficiently is a central part of the data analysis process. Whilst many computer programs are capable of displaying powder data, their focus is typically on advanced operations such as structure solution or Rietveld refinement. This article describes a lightweight software package, _Jpowder_, whose focus is fast and convenient visualization and comparison of powder data sets in a variety of formats from computers with network access. _Jpowder_ is written in Java and uses its associated Web Start technology to allow 'single-click deployment' from a web page, [http://www.jpowder.org]. _Jpowder_ is open source, free and available for use by anyone.

==1. Introduction==

There is no shortage of computer programs that are capable of displaying powder diffraction data, often as the logical outcome of an analysis step such as a Rietveld refinement. Such programs include, for example, _TOPAS_ (Coelho, 2003), _FOX_ (Favre-Nicolin & Černý, 2002), _!HighScore_ (2010), _Endeavour (Putz _et al_. 1999), _DASH_ (David _et al_., (2006) !FullProf_Suite_ (Rodriguez-Carvajal, 1993), _GSAS_ (Larson & Von Dreele, 1994), _EXPO2009_ (Altomare _et al_., 2006), _EVA_ (2010), _PowderX_ (Dong, 1999) and _Powder3D_ (2008). However, such software packages are designed mainly for analysis of diffreaction data (_e.g._ Rietveld refinement, structure solution, quantitative phase analysis, indexing _etc_.). Here, a simple, lightweight, easy-to-access program (_Jpowder_) for straightforward visualization and comparison of powder diffraction data sets is presented.

_Jpowder_ uses both the Jva Web Start and Java applet technologies. Java Web Start provides the power to launch fully featured Java applications with a single click and without the need to go through complicated operating system installation procedures. It increases performance by caching application resources and provides automatic update management by checking for application updates on each application launch. If new versions of any Java archive (JAR) files that constitute the application are available from the from which they were originally accessed, Java Web Start downloads them before running the application. Furthermore, the nature of the Java Web Start model can enable applications to be installed by the end-user in a 'locked down' environment, such as a student teaching laboratory in a university department.

Using the same codebase, a limited range of _Jpowder_ functionality has been exposed in the form of a Java applet - a self-contained Java component that is embedded within a standard HTML web page. This provides an even more convenient mechanism to present data in an interactive style on the web.

The Java programming language has been used by many scientists to develop applications that offer excellent performance and portability, and some notable Java-based programs in the field of crystallography and molecular display include _Jmol_ (2008), _MAUD_ (Lutterotti & Bertolotti, 2003), _JCrystal_ (2010) and _Kiosk_ (2010). The _Jmol_ applet has been widely adopted for the interactive display of molecules on the web. The applet version of _Jpowder_ aims to do the same for powder diffraction data.

==2. _Jpowder_ overview==

_Jpowder_ is optimized for visual inspection of powder data. Data files can be dragged into _Jpowder_ from the desktop or by using the _Jpowder_ Explorer window (Fig. 1) When the Explorer window is used, multiple files from multiple folders can be selected simultaneously. 
The data are visualized as plots in charts, also reffered to as plot windows. Plots may be manipulated using the mouse or a number of shortcut keys. In addition, variousetools are available to aid plot comparison, for example, by moving, rescaling and changing the appearance of plots. Charts can be exported in variouse ways, including using the 'PDF' for publication option. _Jpowder_ also includes tools for basic data analysis tasks, including, for example, selecting peaks to a peak list, which can subsequently be exported to an indexing program such as _DICVOL_ (Boultif & Louër, 2004), and a tool for switching _x_ axes between 2θ and _d_ spacing to aid comparison of data sets collected at different wavelengths. Charts can be saved to disk in '_Jpowder_-applet format' (a serialized object), which can susequently be loaded into the applet version of _Jpowder_. This feature can be used to publish powder data not only as static images but also as interactive applets that offer the same manipulation options as a _Jpowder_ chart; see, for example, [http://www.jpowder.org/JpowderApplet.html].

==3. Program description==
===3.1. Supported file formats===
The following file formats are supported for this version of _Jpowder:_
 * XY format (.xy). Two-column ASCII format, where the data in the first column are assumed to be the diffraction angle in 2θ and those in the second column are X-ray or neutron counts.
 * XYE format (.xye). As for XY format, but with an additional column listing the estimated standard deviations for the counts. This format also supports the use of a single real number, specifying a wavelength, as the first line of the file.
 * CIF format. The crystallographic information file format is described in detail at [http://www.iucr.org/resources/cif].
 * ISIS _GSAS_ format. At the STFC ISIS Facility (Rutherford Appleton Laboratory, Oxford, UK), _GSAS_ is frequently used to refine structures against time-of-flight neutron powder data. The current version of _Jpowder_ requires such data to be in what the _GSAS_ manual refers to as 'RALF/FXYE format'. When reading such a time-of-flight .gss file, the _x_ values are assumed to be given in units of microseconds.

_Jpowder_ will attempt to read files with extensions .gss and .cif as ISIS _GSAS_ format and CIF format files, respectively. For files with any other extensions, _Jpowder_ will attempt to read the file in XY or XYE format. All data are assumed to be constant-wanelength data with the exception of data using the ISIS _GSAS_ format. The _Jpowder_ code is open source and structured in such a way that it is straightforward for anyone used to Java programming to extend the list of supported file types.

===3.2. Plotting data===
_Jpowder_ supports three methods for opening files:
 # by the standard 'File' menu approach, which permits the selection of one or more files from a single folder.
 # by dragging-and-dropping one or more files from a single folder (including the desktop) onto the Plot Area of _Jpowder_.
 # by dragging-and-dropping one or more selected files from one or more folders using the _Jpowder_ Explorer window. 
Note that when multiple files are opened simultaneously, they do so in a single _Jpowder_ chart. Furthermore, when a file is dropped onto an existing chart, an additional Plot is created within the chart.

===3.3. Visually exploring a chart===
When multiple plots are displayed in a single chart, the 'Plot(s) Visible In Chart' panel is used to select which plots are visible at any given time. The mouse  can be used to adjust the displayed region as follows: left click, hold down and drag to the right and down to zoom in on a region (a semi-transparent rectangle highlights the area to be zoomed); left click, hold down and drag to the left to restore the default view; left click, hold down and drag whilst holding down the Ctrl key to move plots. A list of shortcut keys is presented in Table 1.

===3.4. Preparing a figure for publication in a scientific journal===
A chart may be saved as a PDF file or an image (PNG) file or copied to the clipboard. In addition, a chart can be saved as a 'PDF for Publication' file, where the background colour is temporarily changed to white while the chart is saved to the selected format. Changing of the background colour can also be done manually using the 'Properties' window, which can be accessed either from the main 'Edit' menu or by right-clicking over the chart.

===3.5. Preparing an interactive figure for web publication===
A chart may also be saved as a '_Jpowder_ applet format' file. This file can be subsequently imported into an applet version of _Jpowder_ in order to display the data on a web page in a form that has the same 'look-and-feel' and functionality as a _Jpowder_ chart. Full details of how to use this feature are give at [http://www.jpowder.org/JpowderApplet.html].

===3.6. _Jpowder_ Tools===
Upon clicking the Tools tab of _Jpowder_, the user is presented with several options (see Fig. 2) for interacting with, or changing the display of, plots in _Jpowder_, and these are summarized below.

====3.6.1. Peak selection.====
This allows the user to select the location of peaks. These are stored in a peak list which can be copied to the clipboard and subsequently utilized in indexing programs such as _DICVOL_.

====3.6.2. Rescale and move.====
The _y_ data of a plot can be scaled by simple multiplication and division operations, or adjusted by the addition or subtraction of a constant value. These simple operations are provided to help the user compare plots collected under different conditions more easily.

====3.6.3. Appearance.====
This tool is complementary to the chart properties window and is used to change the appearance of plots in a chart. For example, it allows users to change features such as marker types, plot colour and axis tick spacing.

====3.6.4. Zoom and pan.====
This tool currently only provides a description of the default zoom and pan functionality of _Jpowder_ and is serving as a placeholder for the addition of more functionality.

====3.6.5. _x_-axis transform.====
This tool uses supplied wavelength information to convert 2θ into _d_ spacings and _vice versa_. It assumes that the data were collected at constant wavelength and there fore currently does not support time-of-flight data.

===4. Software and hardware environment===
_Jpowder_ will run on any PC that supports a Java Runtime Environment (JRE). Specifically, version 1.6 or higher is required for the version of _Jpowder_ described in this paper; however, if a JRE version older than 1.6 (_i.e._ older than 11 December 2006) is installed on the local machine, the user is directed to the JRE update web page.

By default, Java Web Start applications run in a restricted environment, known as a sandbox - meaning they cannot access local files or the network. _Jpowder_ provides functionality that goes beyond that allowed in the sandbox by signing the application's JAR files; this means that the user will need to accept a digitally signed certificate upon first installation, as depicted in fig. 3. This model enables Java Web Start applications to be installed by the end-user in an environment without administrative permissions, such as a university department where students have roaming accounts.

_Jpowder_ versions can be updated for all users worldwide simply by providing an updated JAR file on the web server. On each user's computer, Java Web Starter checks the web server for updates when the application runs. Resources are cached locally, for improved performance, but this also confers the advantage that they can function independently during any network/internet outages.

The code is licensed under GNU General Public License version 3.

===5. Documentation and Availability===
_Jpowder_ is downloadable from [http://www.jpowder.org] and the user wiki is available at [http://www.jpowder.org/wiki]. The source code is available to download from [http://code.google.com/p/jpowder] and bugs can be reported _via_ [http://code.google.com/p/jpowder/issues]. The _Jpowder_ discussion group at [http://groups.google.com/group/jpowder] provides a forum for the discussion of _Jpowder_-related issues, such as feature requests.

KP gratefully acknowledges the support of the Department of Computer Science at Kasem Bandit University. AJM is grateful to STFC, who provided the funding for MA. The authors are very grateful to Srikanth Nagella, Harriott Nowell and Norman Shankland for useful discussions, suggestions and extensive program testing. _Jpowder_ uses the open source libraries JFreeChart ([http://www.jfree.org/jfreechart]), JXLayer ([http://jxlayer.dev.java.net]) and we would like to thank the developers of these excellent libraries for making their software available.

===References===
Altomare, A., Camalli, M., Cuocci, C., Giacovazzo, C., Moliterni, A. & Rizzi, R. (2009). _J. Appl. Cryst._ *42*, 1197-1202.