/* ===========================================================
 * This file is part of Jpowder, see <http://www.jpowder.org/>
 * ===========================================================
 *
 * Jpowder is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * Jpowder is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * ---------
 * ChangePlotStyle.java
 * ---------
 * (C) Copyright 2009-2010 STFC Rutherford Appleton Laboratories and
 * Kasem Bundit University.
 *
 * Author(s):  M Arjeneh, ISIS, Rutherford Appleton Laboratory
 *             Anders Marvardsen, ISIS, Rutherford Appleton Laboratory
 *
 * File change history is stored at: <http://code.google.com/p/jpowder/source/browse>
 *
 */
package org.jpowder.chartTools;

import java.awt.BasicStroke;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.renderer.xy.XYErrorRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jpowder.Analysis.ToolsIcon;
import org.jpowder.InfoPanel;
import org.jpowder.Jpowder;
import org.jpowder.JpowderInternalframe;
import org.jpowder.chartTools.Markers.MarkerArray;
import org.jpowder.chartTools.Markers.MarkerComboBoxRenderer;
import org.jpowder.chartTools.Markers.MarkerShapes;
import org.jpowder.chartTools.Markers.MarkesIcons;
import org.jpowder.dataset.DataSetNoErrors;
import org.jpowder.dataset.DataSetWithErrors;

/**
 *Change the appearnce of each plots within the chart.
 * 
 */
public class ChangePlotStyle extends javax.swing.JPanel implements InfoPanel {

    private ToolsIcon toolsIcon;
    /*Array of string which contains the all the file names that have been plotted. */
    private String[] string;
    /* Using Multi line jLabel.*/
    private String labelText =
            "<html><FONT COLOR=RED>Red</FONT> and " +
            "<FONT COLOR=BLUE>Blue</FONT> Text</html>";
    MarkerArray array = new MarkerArray();
    MarkesIcons[] carray = array.createCountriesArray();

    /**
     *
     * @param chartToolsIcon
     */
    public ChangePlotStyle(ToolsIcon analysisIcon) {
        initComponents();
        this.toolsIcon = analysisIcon;

        markersComboBox.setRenderer(new MarkerComboBoxRenderer(null));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        seriesPaintPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        dataSetComboBox1 = new javax.swing.JComboBox();
        buttonGroup2 = new javax.swing.ButtonGroup();
        conectingLines = new javax.swing.JCheckBox();
        errorBars = new javax.swing.JCheckBox();
        backButton = new javax.swing.JButton();
        changePlotStyleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        markerPanel = new javax.swing.JPanel();
        fileNameComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        automaticRadioButton = new javax.swing.JRadioButton();
        noneRadioButton = new javax.swing.JRadioButton();
        buitInRadioButton = new javax.swing.JRadioButton();
        fillRadioButton = new javax.swing.JRadioButton();
        unfillRadioButton = new javax.swing.JRadioButton();
        MarkerSizeSpinner = new javax.swing.JSpinner();
        markersComboBox = new javax.swing.JComboBox(carray);
        seriesColourPanel = new javax.swing.JPanel();
        seriesColourComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        colourPickerButton = new javax.swing.JToggleButton();
        labelText =
        "<html> Select a plot from list and then  " +
        "pick a series colour by clicking on the " +
        "button."+
        "<P>";
        jLabel8 = new javax.swing.JLabel();
        tickSpacingPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        xTickField = new javax.swing.JTextField();
        yTickField = new javax.swing.JTextField();
        tickSpacingApplyButton = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        seriesPaintPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Series Colour"));

        jLabel6.setText("Plot(s):");

        dataSetComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataSetComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seriesPaintPanelLayout = new javax.swing.GroupLayout(seriesPaintPanel);
        seriesPaintPanel.setLayout(seriesPaintPanelLayout);
        seriesPaintPanelLayout.setHorizontalGroup(
            seriesPaintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seriesPaintPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataSetComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        seriesPaintPanelLayout.setVerticalGroup(
            seriesPaintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seriesPaintPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(seriesPaintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dataSetComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        conectingLines.setSelected(true);
        conectingLines.setText("Turn on the connecting lines");
        conectingLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectingLinesActionPerformed(evt);
            }
        });

        errorBars.setText("Turn on the error bars");
        errorBars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorBarsActionPerformed(evt);
            }
        });

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Back.PNG"))); // NOI18N
        backButton.setText("Back");
        backButton.setAlignmentY(0.0F);
        backButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        backButton.setIconTextGap(2);
        backButton.setMargin(new java.awt.Insets(2, 0, 2, 0));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        changePlotStyleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Appearance_Large.png"))); // NOI18N
        changePlotStyleLabel.setPreferredSize(new java.awt.Dimension(300, 144));

        jLabel1.setText("Change appearance of plots in a chart.");

        markerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Marker Options"));

        fileNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Markers:");

        jLabel5.setText("Size:");

        jLabel3.setText("Plot(s):");

        buttonGroup1.add(automaticRadioButton);
        automaticRadioButton.setText("Automatic");
        automaticRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(noneRadioButton);
        noneRadioButton.setText("None");
        noneRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noneRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(buitInRadioButton);
        buitInRadioButton.setText("Built In");
        buitInRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buitInRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(fillRadioButton);
        fillRadioButton.setSelected(true);
        fillRadioButton.setText("Fill");
        fillRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(unfillRadioButton);
        unfillRadioButton.setText("Unfill");
        unfillRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfillRadioButtonActionPerformed(evt);
            }
        });

        MarkerSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, 50.0d, 0.5d));
        MarkerSizeSpinner.setValue(2);
        MarkerSizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MarkerSizeSpinnerStateChanged(evt);
            }
        });

        markersComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markersComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout markerPanelLayout = new javax.swing.GroupLayout(markerPanel);
        markerPanel.setLayout(markerPanelLayout);
        markerPanelLayout.setHorizontalGroup(
            markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(markerPanelLayout.createSequentialGroup()
                .addGroup(markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buitInRadioButton)
                    .addComponent(noneRadioButton)
                    .addComponent(automaticRadioButton)
                    .addGroup(markerPanelLayout.createSequentialGroup()
                        .addComponent(fillRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unfillRadioButton))
                    .addComponent(fileNameComboBox, 0, 179, Short.MAX_VALUE)
                    .addGroup(markerPanelLayout.createSequentialGroup()
                        .addComponent(markersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MarkerSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        markerPanelLayout.setVerticalGroup(
            markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(markerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(automaticRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noneRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buitInRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fileNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(markersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(MarkerSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(markerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fillRadioButton)
                    .addComponent(unfillRadioButton))
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Marker Type", markerPanel);

        seriesColourPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Series Colour"));

        seriesColourComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seriesColourComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Plot(s):");

        colourPickerButton.setText("Pick Series Colour");
        colourPickerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colourPickerButtonActionPerformed(evt);
            }
        });

        jLabel8.setText(labelText);

        javax.swing.GroupLayout seriesColourPanelLayout = new javax.swing.GroupLayout(seriesColourPanel);
        seriesColourPanel.setLayout(seriesColourPanelLayout);
        seriesColourPanelLayout.setHorizontalGroup(
            seriesColourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seriesColourPanelLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesColourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seriesColourComboBox, 0, 145, Short.MAX_VALUE)
                    .addComponent(colourPickerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(seriesColourPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );
        seriesColourPanelLayout.setVerticalGroup(
            seriesColourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seriesColourPanelLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(seriesColourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(seriesColourComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colourPickerButton)
                .addGap(114, 114, 114))
        );

        jTabbedPane1.addTab("Plot Colour", seriesColourPanel);

        tickSpacingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Axis Options"));

        jLabel9.setText("X Axis:");

        jLabel10.setText("Y Axis:");

        xTickField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xTickFieldMouseClicked(evt);
            }
        });

        yTickField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yTickFieldActionPerformed(evt);
            }
        });

        tickSpacingApplyButton.setText("Apply");
        tickSpacingApplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickSpacingApplyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tickSpacingPanelLayout = new javax.swing.GroupLayout(tickSpacingPanel);
        tickSpacingPanel.setLayout(tickSpacingPanelLayout);
        tickSpacingPanelLayout.setHorizontalGroup(
            tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tickSpacingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tickSpacingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xTickField))
                    .addGroup(tickSpacingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yTickField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tickSpacingApplyButton))))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        tickSpacingPanelLayout.setVerticalGroup(
            tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tickSpacingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(xTickField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tickSpacingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(yTickField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tickSpacingApplyButton)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tickSpacingPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {xTickField, yTickField});

        jTabbedPane1.addTab("Tick Spacing", tickSpacingPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(changePlotStyleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(conectingLines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(errorBars)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(changePlotStyleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conectingLines)
                .addGap(3, 3, 3)
                .addComponent(errorBars)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * this is an update method which updates this info Panel.
     */
    public void update() {


        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        setMarkersBuidInEnableFalse();

        if (JpowderInternalframe.getnumberOfJpowderInternalframe() != 0) {
            fileNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(addDataSet()));
            seriesColourComboBox.setModel(new javax.swing.DefaultComboBoxModel(addDataSet()));
            colourPickerButton.setEnabled(true);
            fillTheXTickField();
            fillTheYTickField();
        }
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            String labels[] = {"No Chart Added"};
            fileNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(labels));
            seriesColourComboBox.setModel(new javax.swing.DefaultComboBoxModel(labels));
            colourPickerButton.setEnabled(false);
            colourPickerButton.setSelected(false);
            xTickField.setText("");
            yTickField.setText("");

            return;
        }
        XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer();


        if (inFocus.getPowderDataSet().get(0) instanceof DataSetWithErrors) {
            XYErrorRenderer renderer1 = (XYErrorRenderer) inFocus.getXYPlot().getRenderer();
            errorBars.setSelected(renderer1.getDrawYError());


        }
        conectingLines.setSelected(renderer.getBaseLinesVisible());

        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            errorBars.setSelected(false);
            conectingLines.setSelected(false);

        }
        for (int i = 0; i < inFocus.getXYPlot().getDatasetCount(); i++) {

            if (inFocus.getPowderDataSet().get(i) instanceof DataSetNoErrors) {
                errorBars.setEnabled(false);
            }
            if (inFocus.getPowderDataSet().get(i) instanceof DataSetWithErrors) {
                errorBars.setEnabled(true);

            }
        }
        if (renderer.getBaseShapesVisible()) {
            automaticRadioButton.setSelected(true);
//            if(automaticRadioButton.isSelected()){
//           automaticRadioButton.setSelected(true);
//
//            }
//            if(buitInRadioButton.isSelected()){
//                buitInRadioButton.setSelected(true);
//            }
        } else if (!renderer.getBaseShapesVisible()) {
            noneRadioButton.setSelected(true);
        }

    }

    /**
     *
     * @return changePlotStyleLabel.
     */
    public JLabel getChangePlotStyleLabel() {
        return changePlotStyleLabel;
    }

    public static JComboBox getSeriesColourComboBox() {
        return seriesColourComboBox;
    }

    public static JSpinner getMarkerSizeSpinner() {
        return MarkerSizeSpinner;
    }

    /**
     * this method get all the plotted files name and add them to the comboBox  and
     * also, render to the comboBox so each indivdual file names has the series color
     * wich was plotted in.
     *
     * @return array of strings which contains all the files which has been plotted.
     */
    public String[] addDataSet() {
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        int size = inFocus.getXYPlot().getDatasetCount();
        string = new String[size];
//        string[0] = "Every";
        for (int i = 0; i < size; i++) {

            string[i] = inFocus.getPowderDataSet().elementAt(i).getFileName();
            ComboBoxRenderer boxRenderer = new ComboBoxRenderer();
            fileNameComboBox.setRenderer(boxRenderer);
            seriesColourComboBox.setRenderer(boxRenderer);
        }
        return string;
    }

    /**
     * 
     */
    public void setMarkersBuidInEnableFalse() {

        MarkerSizeSpinner.setEnabled(false);
        markersComboBox.setEnabled(false);
        fileNameComboBox.setEnabled(false);
        fillRadioButton.setEnabled(false);
    }

    public void setMarkersBuidInEnableTrue() {

        MarkerSizeSpinner.setEnabled(true);
        markersComboBox.setEnabled(true);
        fileNameComboBox.setEnabled(true);
        unfillRadioButton.setEnabled(true);
    }

    public void errorMesage() {
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            javax.swing.JOptionPane.showMessageDialog(null, "There Is No Chart.");
            return;
        }
    }

    public void fillTheXTickField() {
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        NumberAxis xAxis = (NumberAxis) inFocus.getXYPlot().getDomainAxis();
        xTickField.setText(Double.toString(xAxis.getTickUnit().getSize()));
    }

    public void fillTheYTickField() {
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        NumberAxis yAxis = (NumberAxis) inFocus.getXYPlot().getRangeAxis();
        yTickField.setText(Double.toString(yAxis.getTickUnit().getSize()));
    }

    public void applyMarkerShape() {
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            javax.swing.JOptionPane.showMessageDialog(null, "There Is No Chart.");

            return;
        }

        int seriescount = inFocus.getXYPlot().getDatasetCount();
        for (int i = 0; i < seriescount; i++) {

            if (inFocus.getPowderDataSet().elementAt(i).getFileName().equals(
                    fileNameComboBox.getSelectedItem())) {


                try {

                    XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
                    renderer.setBaseShapesVisible(true);


                    if (markersComboBox.getSelectedIndex() == 0) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[0]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 1) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[1]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 2) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[2]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 3) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[3]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 4) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[4]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 5) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[5]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 6) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[6]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 7) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[7]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 8) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[8]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 9) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[9]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (markersComboBox.getSelectedIndex() == 10) {
                        renderer.setSeriesShape(0, MarkerShapes.markesShape()[10]);
                        renderer.setBaseShapesFilled(true);

                    }
                    if (unfillRadioButton.isSelected()) {
                        renderer.setBaseShapesFilled(false);
                    }
                    if (fillRadioButton.isSelected()) {
                        renderer.setBaseShapesFilled(true);

                    }

                } catch (NumberFormatException e) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Enter Valid Number.");

                }
            }
        }
    }

    public void applyTickSpacing() {
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            tickSpacingApplyButton.setSelected(false);
            return;
        }


        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        try {
            double newX = Double.parseDouble(xTickField.getText());
            double newY = Double.parseDouble(yTickField.getText());
            NumberAxis xAxis = (NumberAxis) inFocus.getXYPlot().getDomainAxis();
            NumberAxis yAxis = (NumberAxis) inFocus.getXYPlot().getRangeAxis();

            xAxis.setTickUnit(new NumberTickUnit(newX));
            yAxis.setTickUnit(new NumberTickUnit(newY));

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Enter valid number.");
            tickSpacingApplyButton.setSelected(false);
            fillTheXTickField();
            fillTheYTickField();
            return;
        }
    }

    /**
     * this methods turns the the connecting lines in the plotted data on and off.
     * @param evt
     */
    private void conectingLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectingLinesActionPerformed
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            conectingLines.setSelected(true);
            return;
        }
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {
            XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
            boolean status = renderer.getBaseLinesVisible();
            renderer.setBaseLinesVisible(!status);

        }
    }//GEN-LAST:event_conectingLinesActionPerformed
    /**
     * this method turns the error bars int he cif and xye data on and off.
     * @param evt
     */
    private void errorBarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorBarsActionPerformed
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            errorBars.setSelected(true);
            return;
        }
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {

            if (inFocus.getPowderDataSet().get(i) instanceof DataSetWithErrors) {
                XYErrorRenderer renderer = (XYErrorRenderer) inFocus.getXYPlot().getRenderer(i);
                boolean status = renderer.getDrawYError();
                renderer.setDrawYError(!status);//show opposite Y error bar.
                renderer.setDrawXError(!status);
                renderer.setErrorStroke(new BasicStroke(1f));
            }
        }
    }//GEN-LAST:event_errorBarsActionPerformed
    /**
     * return to the chartToolsPanel.
     * @param evt
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        toolsIcon.add(this);
        toolsIcon.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_backButtonActionPerformed

    private void fileNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameComboBoxActionPerformed
        applyMarkerShape();

}//GEN-LAST:event_fileNameComboBoxActionPerformed
    /**
     * this method responsible for gettign action of the comboBoxes and textFied and
     * and appling to the plotted data in the internalframe whcih is in focus.
     * @param evt
     */
    private void buitInRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buitInRadioButtonActionPerformed
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            return;
        }
        if (!buitInRadioButton.isSelected()) {

            setMarkersBuidInEnableFalse();
        }
        if (buitInRadioButton.isSelected()) {

            MarkerSizeSpinner.setEnabled(true);
            markersComboBox.setEnabled(true);
            fileNameComboBox.setEnabled(true);
        }
    }//GEN-LAST:event_buitInRadioButtonActionPerformed

    private void noneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noneRadioButtonActionPerformed
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            return;
        }
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {
            XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
            renderer.setBaseShapesVisible(false);

        }
        if (noneRadioButton.isSelected()) {
            setMarkersBuidInEnableFalse();
        }
    }//GEN-LAST:event_noneRadioButtonActionPerformed

    private void automaticRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticRadioButtonActionPerformed
        if (JpowderInternalframe.getnumberOfJpowderInternalframe() == 0) {
            return;
        }
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        for (int i = 0; i < inFocus.getPowderDataSet().size(); i++) {
            XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) inFocus.getXYPlot().getRenderer(i);
            renderer.setBaseShapesVisible(true);
        }

        if (automaticRadioButton.isSelected()) {
            setMarkersBuidInEnableFalse();
        }

    }//GEN-LAST:event_automaticRadioButtonActionPerformed

    private void dataSetComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataSetComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataSetComboBox1ActionPerformed

    private void seriesColourComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seriesColourComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seriesColourComboBoxActionPerformed

    private void colourPickerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colourPickerButtonActionPerformed
        JpowderInternalframe inFocus = Jpowder.internalFrameInFocus;
        SeriesColourPicker colourPicker = new SeriesColourPicker();
        colourPickerButton.setSelected(false);
        Jpowder.jpowderInternalFrameUpdate(inFocus);
    }//GEN-LAST:event_colourPickerButtonActionPerformed

    private void MarkerSizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MarkerSizeSpinnerStateChanged
        applyMarkerShape();
    }//GEN-LAST:event_MarkerSizeSpinnerStateChanged

    private void markersComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markersComboBoxActionPerformed
        applyMarkerShape();
    }//GEN-LAST:event_markersComboBoxActionPerformed

    private void tickSpacingApplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickSpacingApplyButtonActionPerformed
        applyTickSpacing();
    }//GEN-LAST:event_tickSpacingApplyButtonActionPerformed

    private void xTickFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xTickFieldMouseClicked
        applyTickSpacing();
    }//GEN-LAST:event_xTickFieldMouseClicked

    private void yTickFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yTickFieldActionPerformed
        applyTickSpacing();
    }//GEN-LAST:event_yTickFieldActionPerformed

    private void fillRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillRadioButtonActionPerformed
        applyMarkerShape();
    }//GEN-LAST:event_fillRadioButtonActionPerformed

    private void unfillRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfillRadioButtonActionPerformed
        applyMarkerShape();
    }//GEN-LAST:event_unfillRadioButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JSpinner MarkerSizeSpinner;
    private javax.swing.JRadioButton automaticRadioButton;
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton buitInRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel changePlotStyleLabel;
    private javax.swing.JToggleButton colourPickerButton;
    private javax.swing.JCheckBox conectingLines;
    private javax.swing.JComboBox dataSetComboBox1;
    private javax.swing.JCheckBox errorBars;
    private javax.swing.JComboBox fileNameComboBox;
    private javax.swing.JRadioButton fillRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel markerPanel;
    private javax.swing.JComboBox markersComboBox;
    private javax.swing.JRadioButton noneRadioButton;
    private static javax.swing.JComboBox seriesColourComboBox;
    private javax.swing.JPanel seriesColourPanel;
    private javax.swing.JPanel seriesPaintPanel;
    private javax.swing.JButton tickSpacingApplyButton;
    private javax.swing.JPanel tickSpacingPanel;
    private javax.swing.JRadioButton unfillRadioButton;
    private javax.swing.JTextField xTickField;
    private javax.swing.JTextField yTickField;
    // End of variables declaration//GEN-END:variables
}
